import Quasar from "quasar";

export let fr = {
  ...Quasar.lang.fr,
  orchestra: {
    title: {
      part1: "Exécutions du",
      part2: "au",
    },
    all: "tout",
    success: "succès",
    error: "erreur",
    misfired: "raté/échoué",
    previousWeek: "Semaine précédente",
    nextWeek: "Semaine suivante",
    processLabel: "Process",
    state: "État",
    lastExecutionTime: "Dernière exécution",
    nextExecutionTime: "Prochaine exécution",
    connectionFailed: "La connection à l'API n'a pas pu être établie!",
    loading: "Chargement",
    noData: "Aucune donnée disponible",
    totalExecutions: "Exécutions totales de la semaine",
    functionalId: "Identification fonctionnelle",
    technicalId: "Identification technique ",
    cronExpression: "Expression cron",
    active: "Actif",
    multiExecution: "Autorise la multi-exécution",
    rescuePeriod: "Temps de validité d'une planification (s)",
    settings: "Paramètres",
    executions: "Exécutions",
    done: "Terminé",
    informations: "Informations",
    activities: "Activités",
    support: "Prise en charge",
    startTime: "Date de début",
    endTime: "date de fin",
    duration: "Durée",
    supportDate: "Date de prise en charge",
    comment: "Commentaire",
    running: "Exécution en cours ...",
    yes: "Oui",
    no: "Non",
    noProcess: "Aucun process nommé",
    submit: "Soumettre",
    fieldCannotBeEmpty: "Ce champ ne peut pas être vide",
  },
};
export let en = {
  ...Quasar.lang.props,
  orchestra: {
    title: {
      part1: "Executions from",
      part2: "to",
    },
    all: "all",
    success: "success",
    error: "error",
    misfired: "misfired",
    previousWeek: "Previous week",
    nextWeek: "Next week",
    processLabel: "Process",
    state: "State",
    lastExecutionTime: "Last execution",
    nextExecutionTime: "Next execution",
    connectionFailed: "Connection to the API couldn't be established !",
    loading: "Loading",
    noData: "No data available",
    totalExecutions: "Total executions of the week",
    functionalId: "Functional identification",
    technicalId: "Technical identification",
    cronExpression: "Cron expression",
    active: "Active",
    multiExecution: "Allows multi-execution",
    rescuePeriod: "Validity of a planning (s)",
    settings: "Settings",
    executions: "Executions",
    done: "Done",
    informations: "Informations",
    activities: "Activities",
    support: "Support",
    startTime: "Start time",
    endTime: "End time",
    duration: "Duration",
    supportDate: "Time of support",
    comment: "Comment",
    running: "Running ...",
    yes: "Yes",
    no: "No",
    noProcess: "No process named",
    submit: "Submit",
    fieldCannotBeEmpty: "This field can't be empty",
  },
};
